# 
# Do not Edit! Generated by:
# spectacle version 0.14
# 
# >> macros
%define majorver 8.5
# << macros
%define keepstatic 1

Name:       tcl
Summary:    Tool Command Language, pronounced tickle
Version:    8.5.8
Release:    4
Group:      Development/Languages
License:    TCL
URL:        http://tcl.sourceforge.net/
Source0:    http://downloads.sourceforge.net/sourceforge/tcl/tcl%{version}-src.tar.gz
Source100:  tcl.yaml
Patch0:     tcl-8.5.1-autopath.patch
Patch1:     tcl-8.5.0-conf.patch
Patch2:     tcl-8.5.0-hidden.patch
Patch3:     tcl-8.5.7-sigabrt.patch
Requires(post):  /sbin/ldconfig
Requires(postun):  /sbin/ldconfig
BuildRequires:  autoconf
Provides:   tcl(abi) = %{majorver}

%description
The Tcl (Tool Command Language) provides a powerful platform for
creating integration applications that tie together diverse
applications, protocols, devices, and frameworks. When paired with the
Tk toolkit, Tcl provides a fastest and powerful way to create
cross-platform GUI applications.  Tcl can also be used for a variety
of web-related tasks and for creating powerful command languages for
applications.



%package devel
Summary:    Tcl scripting language development environment
Group:      Development/Languages
Requires:   %{name} = %{version}-%{release}

%description devel
The Tcl (Tool Command Language) provides a powerful platform for
creating integration applications that tie together diverse
applications, protocols, devices, and frameworks. When paired with the
Tk toolkit, Tcl provides a fastest and powerful way to create
cross-platform GUI applications.  Tcl can also be used for a variety
of web-related tasks and for creating powerful command languages for
applications.

The package contains the development files and man pages for tcl.



%prep
%setup -q -n %{name}%{version}

# tcl-8.5.1-autopath.patch
%patch0 -p1
# tcl-8.5.0-conf.patch
%patch1 -p1
# tcl-8.5.0-hidden.patch
%patch2 -p1
# tcl-8.5.7-sigabrt.patch
%patch3 -p1
# >> setup
# << setup

%build
# >> build pre
pushd unix
# << build pre

%reconfigure  \
    --disable-threads \
    --enable-symbols \
    --enable-shared


# >> build post
make %{?_smp_mflags} TCL_LIBRARY=%{_datadir}/%{name}%{majorver} CFLAGS="$RPM_OPT_FLAGS -DTCL_NO_STACK_CHECK=1"
# << build post
%install
rm -rf %{buildroot}
# >> install pre
# << install pre

# >> install post
make install -C unix INSTALL_ROOT=$RPM_BUILD_ROOT TCL_LIBRARY=%{_datadir}/%{name}%{majorver}

ln -s tclsh%{majorver} $RPM_BUILD_ROOT%{_bindir}/tclsh

# for linking with -lib%{name}
ln -s lib%{name}%{majorver}.so $RPM_BUILD_ROOT%{_libdir}/lib%{name}.so

mkdir -p $RPM_BUILD_ROOT/%{_libdir}/%{name}%{majorver}

# postgresql and maybe other packages too need tclConfig.sh
# paths don't look at /usr/lib for efficiency, so we symlink into tcl8.5 for now
ln -s %{_libdir}/%{name}Config.sh $RPM_BUILD_ROOT/%{_libdir}/%{name}%{majorver}/%{name}Config.sh

mkdir -p $RPM_BUILD_ROOT/%{_includedir}/%{name}-private/{generic,unix}
find generic unix -name "*.h" -exec cp -p '{}' $RPM_BUILD_ROOT/%{_includedir}/%{name}-private/'{}' ';'
( cd $RPM_BUILD_ROOT/%{_includedir}
for i in *.h ; do
[ -f $RPM_BUILD_ROOT/%{_includedir}/%{name}-private/generic/$i ] && ln -sf ../../$i $RPM_BUILD_ROOT/%{_includedir}/%{name}-private/generic ;
done
)

# remove buildroot traces
sed -i -e "s|$PWD/unix|%{_libdir}|; s|$PWD|%{_includedir}/%{name}-private|" $RPM_BUILD_ROOT/%{_libdir}/%{name}Config.sh
rm -rf $RPM_BUILD_ROOT/%{_datadir}/%{name}%{majorver}/tclAppInit.c
rm -rf $RPM_BUILD_ROOT/%{_datadir}/%{name}%{majorver}/ldAix

# << install post



%post -p /sbin/ldconfig

%postun -p /sbin/ldconfig



%files
%defattr(-,root,root,-)
# >> files
%doc README changes
%doc license.terms
%{_bindir}/tclsh*
%{_datadir}/%{name}%{majorver}
%{_datadir}/%{name}8
%{_libdir}/lib%{name}%{majorver}.so
%{_mandir}/man1/*
%{_mandir}/man3/*
%{_mandir}/mann/*
%dir %{_libdir}/%{name}%{majorver}
# << files


%files devel
%defattr(-,root,root,-)
# >> files devel
%{_includedir}/*
%{_libdir}/lib%{name}stub%{majorver}.a
%{_libdir}/lib%{name}.so
%{_libdir}/%{name}Config.sh
%{_libdir}/%{name}8.5/%{name}Config.sh
# << files devel

